plugins {
    id("com.android.application") version "8.1.0" apply false
    id("com.android.library") version "8.1.0" apply false
    id("org.jetbrains.kotlin.android") version "1.9.10" apply false
    id 'com.google.devtools.ksp' version '1.9.10-1.0.13' apply false
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def needReplaceLocal = true
if (needReplaceLocal) {
    allprojects {
        configurations.configureEach {
            resolutionStrategy {
                dependencySubstitution {
                    substitute module('com.github.penfeizhou.android.animation:frameanimation') using project(":frameanimation")
                    substitute module('com.github.penfeizhou.android.animation:apng') using project(":apng")
                    substitute module('com.github.penfeizhou.android.animation:awebp') using project(":awebp")
                    substitute module('com.github.penfeizhou.android.animation:gif') using project(":gif")
                    substitute module('com.github.penfeizhou.android.animation:glide-plugin') using project(":plugin_glide")
                    substitute module('com.github.penfeizhou.android.animation:awebpencoder') using project(":awebpencoder")
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('version.properties').newDataInputStream())

ext {
    Version = properties.version
}

//
//task publishFrameAnimation dependsOn(":frameanimation:uploadArchives") {
//    println "FrameAnimation published"
//}
//
//task publishAPNG dependsOn(publishFrameAnimation, ":apng:uploadArchives") {
//    println "APNG published"
//}
//
//task publishAWebP dependsOn(publishFrameAnimation, ":awebp:uploadArchives") {
//    println "AWebP published"
//}
//
//task publishGif dependsOn(publishFrameAnimation, ":gif:uploadArchives") {
//    println "Gif published"
//}
//
//task publishAWebPEncoder dependsOn(publishAWebP, publishGif, ":awebpencoder:uploadArchives") {
//    println "AwebP Encoder published"
//}
//
//task publishGlidePlugin dependsOn(publishAPNG, publishAWebP, publishGif, ":plugin_glide:uploadArchives") {
//    println "GlidePlugin published"
//}
//
//task PublishAll dependsOn(publishGlidePlugin, publishAWebPEncoder) {
//    println "All published"
//}